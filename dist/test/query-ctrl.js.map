{"version":3,"sources":["../../src/query-ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","scope","target","objectId","metricName","displayPath","suggestPaths","query","callback","datasource","listObjectPaths","then","pathToId","_","reduce","result","memo","item","path","id","map","suggestMetrics","listMetrics","loadPath","fetchObject","objectPath","catch","err","status","panelCtrl","refresh","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;AAEA;;;IAGaA,0B,WAAAA,0B;;;AACX,sCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,wJACvBD,MADuB,EACfC,SADe;;AAG7B,UAAKC,KAAL,GAAaF,MAAb;AACA,UAAKG,MAAL,CAAYC,QAAZ,GAAuB,MAAKD,MAAL,CAAYC,QAAZ,IAAwB,EAA/C;AACA,UAAKD,MAAL,CAAYE,UAAZ,GAAyB,MAAKF,MAAL,CAAYE,UAAZ,IAA0B,EAAnD;AACA,UAAKF,MAAL,CAAYG,WAAZ,GAA0B,MAAKH,MAAL,CAAYG,WAAZ,IAA2B,KAArD;;AAEA;AACA;AACA,UAAKC,YAAL,GAAoB,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACvC,YAAKC,UAAL,CACGC,eADH,GAEGC,IAFH,CAEQ,kBAAU;AACd;AACA,cAAKC,QAAL,GAAgBC,iBAAEC,MAAF,CAASC,MAAT,EAAiB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC/CD,eAAKC,KAAKC,IAAV,IAAkBD,KAAKE,EAAvB;;AAEA,iBAAOH,IAAP;AACD,SAJe,EAIb,EAJa,CAAhB;;AAMAR,iBAASK,iBAAEO,GAAF,CAAML,MAAN,EAAc;AAAA,iBAAQE,KAAKC,IAAb;AAAA,SAAd,CAAT;AACD,OAXH;AAYD,KAbD;;AAeA;AACA;AACA,UAAKG,cAAL,GAAsB,UAACd,KAAD,EAAQC,QAAR,EAAqB;AACzC,UAAI,CAAC,MAAKN,MAAL,CAAYC,QAAjB,EAA2B;;AAE3B,YAAKM,UAAL,CACGa,WADH,CACe,MAAKpB,MAAL,CAAYC,QAD3B,EAEGQ,IAFH,CAEQH,QAFR;AAGD,KAND;;AAQA,UAAKe,QAAL;AAnC6B;AAoC9B;;AAED;;;;;;;+BAGW;AAAA;;AACT,UAAI,CAAC,KAAKrB,MAAL,CAAYC,QAAjB,EAA2B;;AAE3B,WAAKM,UAAL,CACGe,WADH,CACe,KAAKtB,MAAL,CAAYC,QAD3B,EACqC,CAAC,MAAD,CADrC,EAEGQ,IAFH,CAEQ,kBAAU;AACd,eAAKc,UAAL,GAAkBV,OAAOG,IAAzB;AACD,OAJH,EAKGQ,KALH,CAKS,eAAO;AACZ;AACA,YAAIC,IAAIC,MAAJ,IAAc,GAAlB,EAAuB,MAAMD,GAAN;AACxB,OARH;AASD;;;uCAEkB;AACjB,WAAKE,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;AAED;;;;;;qCAGiB;AACf,WAAK5B,MAAL,CAAYC,QAAZ,GAAuB,KAAKS,QAAL,IAAiB,KAAKA,QAAL,CAAc,KAAKV,MAAL,CAAYC,QAA1B,CAAjB,IAAwD,KAAKD,MAAL,CAAYC,QAA3F;;AAEA,WAAKoB,QAAL;AACD;;;;EAnE6CQ,c;;AAsEhDjC,2BAA2BkC,WAA3B,GAAyC,4BAAzC","file":"query-ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\nimport './css/query-editor.css!';\nimport _ from 'lodash';\n\n/**\n * Datasource query UI controller.\n */\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.objectId = this.target.objectId || '';\n    this.target.metricName = this.target.metricName || '';\n    this.target.displayPath = this.target.displayPath || false;\n\n    // Object paths suggestion hook.\n    // Needs to be defined here as it is called from typeahead.\n    this.suggestPaths = (query, callback) => {\n      this.datasource\n        .listObjectPaths()\n        .then(result => {\n          // Form path->ID map.\n          this.pathToId = _.reduce(result, (memo, item) => {\n            memo[item.path] = item.id;\n\n            return memo;\n          }, {});\n\n          callback(_.map(result, item => item.path));\n        });\n    };\n\n    // Object metric suggestion hook.\n    // Needs to be defined here as it is called from typeahead.\n    this.suggestMetrics = (query, callback) => {\n      if (!this.target.objectId) return;\n\n      this.datasource\n        .listMetrics(this.target.objectId)\n        .then(callback);\n    };\n\n    this.loadPath();\n  }\n\n  /**\n   * Loads path for selected Object.\n   */\n  loadPath() {\n    if (!this.target.objectId) return;\n\n    this.datasource\n      .fetchObject(this.target.objectId, ['path'])\n      .then(result => {\n        this.objectPath = result.path;\n      })\n      .catch(err => {\n        // Ignore 404 \"Not Found\" error as user can input anything as Object ID.\n        if (err.status != 404) throw err;\n      });\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  /**\n   * Called when user leaves Object ID input field.\n   */\n  onObjectIdBlur() {\n    this.target.objectId = this.pathToId && this.pathToId[this.target.objectId] || this.target.objectId;\n\n    this.loadPath();\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}